spring.datasource.url=jdbc:postgresql://localhost:5432/data_integration
spring.datasource.username=postgres
spring.datasource.password=011112
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

#adiciona um context root (contexto)
server.servlet.context-path=/api

#Caused by: java.sql.SQLFeatureNotSupportedException: M?todo org.postgresql.jdbc.PgConnection.createClob() ainda n?o foi implementado.
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

#Pool de conexo Hikari
#nmero mximo em milissegundos que um cliente aguardar por uma conexo
spring.datasource.hikari.connection-timeout = 20000
#nmero mximo de conexes inativas mantidas pelo HikariCP em um conjunto de conexes
spring.datasource.hikari.minimum-idle = 10
#mximo de pool de conexo
spring.datasource.hikari.maximum-pool-size = 40
#tempo ocioso para conexo
spring.datasource.hikari.idle-timeout = 10000

#salvando os dados no banco automaticamente
spring.datasource.hikari.auto-commit = true



# Producer properties
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
server.port=8080

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.json.add.type.headers=false
order.topic=ordertopic

#Consumer properties
spring.kafka.consumer.group-id=order-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer